create database t_oauth owner t_admin;
GRANT ALL PRIVILEGES ON DATABASE t_oauth to t_admin;
\c t_oauth;
ALTER SCHEMA public OWNER to t_admin;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO t_admin;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO t_admin;
create extension "uuid-ossp";

-- Create the trigger for update the UPDATE_DATE when updating some rows.
CREATE OR REPLACE FUNCTION T_UPDATE_DATE()
RETURNS TRIGGER AS $$
BEGIN
  NEW.UPDATE_DATE = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- access_token存储表
DROP TABLE IF EXISTS public.OAUTH_ACCESS_TOKEN;
CREATE TABLE public.OAUTH_ACCESS_TOKEN
(
    TOKEN_ID          VARCHAR(255),
    TOKEN             bytea,
    AUTHENTICATION_ID VARCHAR(255),
    USER_NAME         VARCHAR(255),
    CLIENT_ID         VARCHAR(255),
    AUTHENTICATION    bytea,
    REFRESH_TOKEN     VARCHAR(255),
    CREATE_DATE timestamp(0) with time zone DEFAULT now(),
    UPDATE_DATE timestamp(0) with time zone DEFAULT now()
);

ALTER TABLE public.OAUTH_ACCESS_TOKEN OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_ACCESS_TOKEN IS '访问令牌表';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.TOKEN_ID IS 'MD5加密的access_token的值';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.TOKEN IS 'OAuth2AccessToken.java对象序列化后的二进制数据';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.AUTHENTICATION_ID IS 'MD5加密过的username,client_id,scope';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.USER_NAME IS '登录的用户名';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.CLIENT_ID IS '客户端ID';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.AUTHENTICATION IS 'OAuth2Authentication.java对象序列化后的二进制数据';
COMMENT ON COLUMN public.OAUTH_ACCESS_TOKEN.REFRESH_TOKEN IS 'MD5加密果的refresh_token的值';

-- Enable the trigger to update the UPDATE_DATE automatically.
CREATE TRIGGER T_UD_OAUTH_ACCESS_TOKEN BEFORE UPDATE ON public.OAUTH_ACCESS_TOKEN
FOR EACH ROW
EXECUTE PROCEDURE T_UPDATE_DATE();


-- refresh_token存储表
DROP TABLE IF EXISTS public.OAUTH_REFRESH_TOKEN;
CREATE TABLE public.OAUTH_REFRESH_TOKEN
(
    TOKEN_ID       VARCHAR(255),
    TOKEN          bytea,
    AUTHENTICATION bytea,
    CREATE_DATE timestamp(0) with time zone DEFAULT now(),
    UPDATE_DATE timestamp(0) with time zone DEFAULT now()
);

ALTER TABLE public.OAUTH_REFRESH_TOKEN OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_REFRESH_TOKEN IS '更新令牌表';
COMMENT ON COLUMN public.OAUTH_REFRESH_TOKEN.TOKEN_ID IS 'MD5加密过的refresh_token的值';
COMMENT ON COLUMN public.OAUTH_REFRESH_TOKEN.TOKEN IS 'OAuth2RefreshToken.java对象序列化后的二进制数据';
COMMENT ON COLUMN public.OAUTH_REFRESH_TOKEN.AUTHENTICATION IS 'OAuth2Authentication.java对象序列化后的二进制数据';

-- Enable the trigger to update the UPDATE_DATE automatically.
CREATE TRIGGER T_UD_OAUTH_REFRESH_TOKEN BEFORE UPDATE ON public.OAUTH_REFRESH_TOKEN
FOR EACH ROW
EXECUTE PROCEDURE T_UPDATE_DATE();

-- 授权记录表
DROP TABLE IF EXISTS public.OAUTH_APPROVALS;
CREATE TABLE public.OAUTH_APPROVALS
(
    USERID         VARCHAR(255),
    CLIENTID       VARCHAR(255),
    SCOPE          VARCHAR(255),
    STATUS         VARCHAR(10),
    EXPIRESAT      timestamp(0) with time zone,
    LASTMODIFIEDAT timestamp(0) with time zone,
    CREATE_DATE    timestamp(0) with time zone DEFAULT now(),
    UPDATE_DATE    timestamp(0) with time zone DEFAULT now()
);

ALTER TABLE public.OAUTH_APPROVALS OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_APPROVALS IS '授权记录表';
COMMENT ON COLUMN public.OAUTH_APPROVALS.USERID IS '登录的用户名';
COMMENT ON COLUMN public.OAUTH_APPROVALS.CLIENTID IS '客户端ID';
COMMENT ON COLUMN public.OAUTH_APPROVALS.SCOPE IS '申请的权限';
COMMENT ON COLUMN public.OAUTH_APPROVALS.STATUS IS '状态: 0 DENY, 1: APPROVE';
COMMENT ON COLUMN public.OAUTH_APPROVALS.EXPIRESAT IS '过期时间';
COMMENT ON COLUMN public.OAUTH_APPROVALS.LASTMODIFIEDAT IS '最终修改时间';

-- Enable the trigger to update the UPDATE_DATE automatically.
CREATE TRIGGER T_UD_OAUTH_APPROVALS BEFORE UPDATE ON public.OAUTH_APPROVALS
FOR EACH ROW
EXECUTE PROCEDURE T_UPDATE_DATE();

-- 授权码表
DROP TABLE IF EXISTS public.OAUTH_CODE;
CREATE TABLE public.OAUTH_CODE
(
    CODE           VARCHAR(255),
    AUTHENTICATION bytea
);
ALTER TABLE public.OAUTH_CODE OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_CODE IS '授权码表';
COMMENT ON COLUMN public.OAUTH_CODE.CODE IS '授权码(未加密)';
COMMENT ON COLUMN public.OAUTH_CODE.AUTHENTICATION IS 'AuthorizationRequestHolder.java对象序列化后的二进制数据';

-- client用户表
DROP TABLE IF EXISTS public.OAUTH_CLIENT_DETAILS;
CREATE TABLE public.OAUTH_CLIENT_DETAILS
(
    CLIENT_ID               VARCHAR(255) primary key, 
    RESOURCE_IDS            VARCHAR(255),
    CLIENT_SECRET           VARCHAR(255),
    SCOPE                   VARCHAR(255),
    AUTHORIZED_GRANT_TYPES  VARCHAR(255),
    WEB_SERVER_REDIRECT_URI VARCHAR(255),
    AUTHORITIES             VARCHAR(255),
    ACCESS_TOKEN_VALIDITY   INTEGER,
    REFRESH_TOKEN_VALIDITY  INTEGER,
    ADDITIONAL_INFORMATION  VARCHAR(4096),
    AUTOAPPROVE             VARCHAR(255),
    CREATE_DATE    timestamp(0) with time zone DEFAULT now(),
    UPDATE_DATE    timestamp(0) with time zone DEFAULT now()
);


ALTER TABLE public.OAUTH_CLIENT_DETAILS OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_CLIENT_DETAILS IS '客户端信息';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.CLIENT_ID IS '客户端ID';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.RESOURCE_IDS IS '资源ID集合,多个资源时用逗号(,)分隔';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.CLIENT_SECRET IS '客户端密匙';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.SCOPE IS '客户端申请的权限范围';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.AUTHORIZED_GRANT_TYPES IS '客户端支持的grant_type';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.WEB_SERVER_REDIRECT_URI IS '重定向URI';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.AUTHORITIES IS '客户端所拥有的Spring Security的权限值，多个用逗号(,)分隔';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.ACCESS_TOKEN_VALIDITY IS '访问令牌有效时间值(单位:秒)';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.REFRESH_TOKEN_VALIDITY IS '更新令牌有效时间值(单位:秒)';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.ADDITIONAL_INFORMATION IS '预留字段';
COMMENT ON COLUMN public.OAUTH_CLIENT_DETAILS.AUTOAPPROVE IS '用户是否自动Approval操作';

-- Enable the trigger to update the UPDATE_DATE automatically.
CREATE TRIGGER T_UD_OAUTH_CLIENT_DETAILS BEFORE UPDATE ON public.OAUTH_CLIENT_DETAILS
FOR EACH ROW
EXECUTE PROCEDURE T_UPDATE_DATE();

-- 客户端授权令牌表
DROP TABLE IF EXISTS public.OAUTH_CLIENT_TOKEN;
CREATE TABLE public.OAUTH_CLIENT_TOKEN
(
    TOKEN_ID          VARCHAR(255),
    TOKEN             bytea,
    AUTHENTICATION_ID VARCHAR(255),
    USER_NAME         VARCHAR(255),
    CLIENT_ID         VARCHAR(255),
    CREATE_DATE       timestamp(0) with time zone DEFAULT now(),
    UPDATE_DATE       timestamp(0) with time zone DEFAULT now()
);

ALTER TABLE public.OAUTH_CLIENT_TOKEN OWNER to t_admin;
COMMENT ON TABLE public.OAUTH_CLIENT_TOKEN IS '客户端授权令牌表';
COMMENT ON COLUMN public.OAUTH_CLIENT_TOKEN.TOKEN_ID IS 'MD5加密的access_token值';
COMMENT ON COLUMN public.OAUTH_CLIENT_TOKEN.TOKEN IS 'OAuth2AccessToken.java对象序列化后的二进制数据';
COMMENT ON COLUMN public.OAUTH_CLIENT_TOKEN.AUTHENTICATION_ID IS 'MD5加密过的username,client_id,scope';
COMMENT ON COLUMN public.OAUTH_CLIENT_TOKEN.USER_NAME IS '登录的用户名';
COMMENT ON COLUMN public.OAUTH_CLIENT_TOKEN.CLIENT_ID IS '客户端ID';

-- Enable the trigger to update the UPDATE_DATE automatically.
CREATE TRIGGER T_UD_OAUTH_CLIENT_TOKEN BEFORE UPDATE ON public.OAUTH_CLIENT_TOKEN
FOR EACH ROW
EXECUTE PROCEDURE T_UPDATE_DATE();
-- DML数据准备

INSERT INTO public.OAUTH_CLIENT_DETAILS (CLIENT_ID, RESOURCE_IDS, CLIENT_SECRET, SCOPE, AUTHORIZED_GRANT_TYPES, WEB_SERVER_REDIRECT_URI, AUTHORITIES, ACCESS_TOKEN_VALIDITY, REFRESH_TOKEN_VALIDITY, ADDITIONAL_INFORMATION, AUTOAPPROVE)
VALUES ('test_client', NULL, '$2a$10$2szDKjvKHJCWE6YQNznogOeQF3USZHmCYj1fG7YbfK.vnTgNKLzri', 'read', 'client_credentials,authorization_code,mobile,password,refresh_token', 'http://baidu.com', NULL, 7200, 108000, NULL, NULL);


