<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>twinkle-authorization</artifactId>
    <packaging>jar</packaging>
    <name>Twinkle Cloud - Twinkle Security Authorization Service</name>
    <description>Twinkle Cloud - Twinkle Security Authorization MicroService.</description>

    <parent>
        <groupId>com.twinkle.cloud</groupId>
        <artifactId>twinkle-security</artifactId>
        <version>0.1.0</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-netflix-hystrix</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.twinkle.cloud</groupId>
            <artifactId>twinkle-common-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twinkle.cloud</groupId>
            <artifactId>twinkle-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twinkle.cloud</groupId>
            <artifactId>twinkle-common-mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.8.0</version>
                <configuration>
                    <from>
                        <image>${docker.registry}/jdk/openjdk:8-jre-alpine</image>
                    </from>
                    <to>
                        <image>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${kubeimage.version}
                        </image>
                    </to>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.4.5</version>
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution><execution> <id>push-image</id> <phase>deploy</phase>
                            <goals> <goal>push</goal> </goals> </execution>

                        <execution>
                            <id>tag-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>:${project.version}
                                <image>${docker.image.prefix}/${project.artifactId}:${project.version}</image>
                                <newName>${docker.registry}${docker.image.prefix}/${project.artifactId}:${kubeimage.version}</newName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>push-image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <imageName>${docker.registry}${docker.image.prefix}/${project.artifactId}:${kubeimage.version}</imageName>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <serverId>${docker.mvnhup}</serverId>
                        <registryUrl>${docker.registry.url}</registryUrl>
                        <baseImage>java</baseImage>:${project.version}
                        <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
                        <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                        <forceTags>true</forceTags>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources><imageTags> <imageTag>${project.version}</imageTag>
                            <imageTag>latest</imageTag> </imageTags>
                    </configuration>
                </plugin> -->
        </plugins>
    </build>
</project>